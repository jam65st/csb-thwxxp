{"version":3,"sources":["app/utils/Guess.js","app/components/Attempts.js","app/svg/settings48.svg","app/svg/power48.svg","app/components/Game.js","app/components/Config.js","app/App.js","index.js"],"names":["Guess","DEFAULT_MIN","DEFAULT_MAX","STATE_INIT","STATE_HIGHER","STATE_LOWER","STATE_WINNER","MIN","MAX","RESET","CURRENT_GAME","CURRENT_CONFIG","CURRENT_TO_GAME","CURRENT_TO_CONFIG","title","title_sub","author","author_uri","prelabels","label_lower","label_upper","label_reset","guessInfo","min","max","className","_path","Attempts","props","list","attemptsList","length","map","value","index","_excluded","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSettings48","_ref","svgRef","titleId","xmlns","height","width","ref","id","d","ForwardRef","Game","result","toUpperCase","type","placeholder","guessValue","onChange","event","Number","isNaN","updateGuess","onBlur","testGuess","onKeyDown","disabled","isDisabled","onClick","changeScreen","SvgPower48","Config","resetDefault","updateMinMax","setButton","href","rel","App","useState","randomNumber","setRandomNumber","current","setCurrent","setAttemptsList","setGuessValue","setResult","setMin","setMax","setIsDisabled","resetBounds","currentTarget","randomInt","resetGame","Math","trunc","random","toTest","kind","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.17d9d637.chunk.js","sourcesContent":["// noinspection JSUnusedLocalSymbols\n/**\n * #Guess\n *\n * The Guess Class is a Dictionary utility that can be understood\n * as a parameter list, also as reserved words to improve this app.\n *\n * @author @jam65st | Jaime A. Mendez\n *\n */\nexport default class Guess {\n\t/**\n\t * ##DEFAULT_MIN\n\t *\n\t * Constant with the inital minimal value of guess\n\t */\n\tstatic DEFAULT_MIN = 1;\n\t\n\t/**\n\t * ##DEFAULT_MAX\n\t *\n\t * Constant with the inital maximum value of guess\n\t */\n\tstatic DEFAULT_MAX = 10;\n\t\n\t/**\n\t * ##STATE_INIT\n\t *\n\t * Constant that reports the start of a new game\n\t */\n\tstatic STATE_INIT   = \"init\";\n\t\n\t/**\n\t * ##STATE_HIGHER\n\t *\n\t * Constant to report a higher value of the guess\n\t */\n\tstatic STATE_HIGHER = \"higher\";\n\t\n\t/**\n\t * ##STATE_LOWER\n\t *\n\t * Constant to report a lower value of the guess\n\t */\n\tstatic STATE_LOWER  = \"lower\";\n\t\n\t/**\n\t * ##STATE_WINNER\n\t *\n\t * Constant to report a the won of the game\n\t */\n\tstatic STATE_WINNER = \"winner\";\n\t\n\t/**\n\t * ##MIN\n\t *\n\t * Constant of control to use this string\n\t */\n\tstatic MIN   = \"min\";\n\t\n\t/**\n\t * ##MAX\n\t *\n\t * Constant of control to use this string\n\t */\n\tstatic MAX   = \"max\";\n\t\n\t/**\n\t * ##RESET\n\t *\n\t * Constant of control to use this string\n\t */\n\tstatic RESET = \"reset\";\n\t\n\t/**\n\t * ##CURRENT_GAME\n\t *\n\t * Constant of control of the game status\n\t */\n\tstatic CURRENT_GAME      = \"game\";\n\t\n\t/**\n\t * ##CURRENT_CONFIG\n\t *\n\t * Constant of control of the game status\n\t */\n\tstatic CURRENT_CONFIG    = \"config\";\n\t\n\t/**\n\t * ##CURRENT_TO_GAME\n\t *\n\t * Constant of control of the game views\n\t */\n\tstatic CURRENT_TO_GAME   = \"toGame\";\n\t\n\t/**\n\t * ##CURRENT_TO_CONFIG\n\t *\n\t * Constant of control of the game views\n\t */\n\tstatic CURRENT_TO_CONFIG = \"toConfig\";\n\t\n\t// Game labels used in the UI\n\tstatic title       = \"Play!\";\n\tstatic title_sub   = \"Lucky Guess Number\";\n\tstatic author      = \"J. A. Mendez\";\n\tstatic author_uri  =\n\t\t\t       \"https://matching.turing.com/developer-resume-preview/1784d3306c87c942285a3cf83e5d528c623e431789c8bd\";\n\tstatic prelabels   = \"Choose the bounds for your game\";\n\tstatic label_lower = \"Lower\";\n\tstatic label_upper = \"Upper\";\n\tstatic label_reset = \"Reset\";\n\t\n\t/**\n\t * ##guessInfo\n\t * \n\t * STATIC method to return a composed message with JSX requirements\n\t *\n\t * @param min {number} int\n\t * @param max {number} int\n\t * @returns {JSX.Element}\n\t * \n\t */\n\tstatic guessInfo = ( min, max ) => {\n\t\treturn (<div className=\"info\">\n\t\t\tGuess the number between <strong>{min}</strong> and <strong>{max}</strong>\n\t\t</div>)\n\t}\n}\n","/**\n * #Attempts\n *\n * Attempts counter component\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n * @author @jam65st | Jaime A. Mendez\n *\n */\nconst Attempts = (props) => {\n  // list of user attempts\n  const list = props.attemptsList;\n\n  // render\n  return (\n    <div className=\"attempts\">\n      <small>Attempts</small>\n      <span>{list.length}</span>\n      <ul>\n        {list.map((value, index) => (\n          <li key={index} value={value}></li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Attempts;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettings48(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.45 45.05 17.4 38.4q-.7-.2-1.55-.7-.85-.5-1.4-.95l-6.2 2.85-5.65-10 5.65-4.1q-.05-.25-.05-.725v-1.5q0-.425.05-.775L2.6 18.3l5.65-9.9 6.3 2.85q.5-.35 1.35-.85.85-.5 1.5-.7l1.05-6.8H29.6l1 6.75q.75.2 1.575.7.825.5 1.375.9l6.3-2.85 5.6 9.9-5.75 4.05q.05.4.125.85.075.45.075.8 0 .35-.075.775-.075.425-.125.775l5.75 4.05-5.7 10-6.2-2.85q-.55.45-1.425.975-.875.525-1.475.675l-1.05 6.65Zm5.5-14.7q2.65 0 4.5-1.85T30.3 24q0-2.6-1.85-4.475-1.85-1.875-4.5-1.875-2.7 0-4.525 1.875Q17.6 21.4 17.6 24q0 2.65 1.825 4.5t4.525 1.85Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings48);\nexport default __webpack_public_path__ + \"static/media/settings48.c23033fa.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPower48(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.75 26.1V4.65h4.55V26.1Zm2.2 17.1q-3.95 0-7.4-1.5t-6.05-4.1Q7.9 35 6.425 31.55 4.95 28.1 4.95 24.15q0-4.2 1.725-7.95T11.6 9.8l3.55 3.5q-2.75 1.85-4.2 4.7-1.45 2.85-1.45 6.1 0 6.05 4.225 10.3Q17.95 38.65 24 38.65q6.05 0 10.275-4.25Q38.5 30.15 38.5 24.1q0-3.35-1.425-6.2T32.9 13.15l3.55-3.55q3.15 2.7 4.9 6.525 1.75 3.825 1.75 8.025 0 3.95-1.5 7.4t-4.1 6.075q-2.6 2.625-6.1 4.1-3.5 1.475-7.45 1.475Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPower48);\nexport default __webpack_public_path__ + \"static/media/power48.1d90e040.svg\";\nexport { ForwardRef as ReactComponent };","import Attempts from \"./Attempts\";\nimport { ReactComponent as ToConfig } from \"../svg/settings48.svg\";\nimport Guess from \"../utils/Guess\";\n\n/**\n * #Game\n *\n * Component with game elements.\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n * @author @jam65st | Jaime A. Mendez\n */\nconst Game = (props) => {\n  // Events\n  /**\n   * #checkValue\n   *\n   * Method to test the valid user values before to update it\n   *\n   * @param event {object}\n   *\n   */\n  const checkValue = (event) => {\n    let value = Number(event.target.value);\n\n    if (!isNaN(value) && value >= props.min && value <= props.max) {\n      // valid values\n      props.updateGuess(event.target.value);\n    } else if (value !== 0) {\n      // invalid values preserves the latest valid value\n      event.target.value = props.guessValue;\n    }\n  };\n\n  /**\n   * #checkEnter\n   *\n   * Activates blur if user press enter key\n   *\n   * @param event {object}\n   *\n   */\n  const checkEnter = (event) => {\n    if (event.key === \"Enter\") props.testGuess(event);\n  };\n\n  // render\n  return (\n    <section id=\"game\" result={props.result}>\n      {Guess.guessInfo(props.min, props.max)}\n      <div className=\"status\">{props.result.toUpperCase()}</div>\n      <Attempts attemptsList={props.attemptsList} />\n      <div className=\"guess-holder\">\n        <input\n          type=\"number\"\n          placeholder=\"#\"\n          value={props.guessValue === 0 ? props.min : props.guessValue}\n          onChange={checkValue}\n          onBlur={props.testGuess}\n          onKeyDown={checkEnter}\n          disabled={props.isDisabled}\n        />\n      </div>\n      <button\n        id=\"toConfig\"\n        className={\n          props.attemptsList.length < 5 && props.result !== Guess.STATE_WINNER\n            ? \"hidden\"\n            : \"\"\n        }\n        onClick={props.changeScreen}\n      >\n        <ToConfig />\n      </button>\n    </section>\n  );\n};\n\nexport default Game;\n","import Guess from \"../utils/Guess\";\nimport { ReactComponent as ToGame } from \"../svg/power48.svg\";\n\n/**\n * #Config\n *\n * Component to modify user parameters and init a new game\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n * @author @jam65st | Jaime A. Mendez\n *\n */\nconst Config = (props) => {\n  // Events\n  /**\n   * #changeMin\n   *\n   * Updates the value of the minimal value parameter\n   *\n   * @param event {object}\n   */\n  const changeMin = (event) =>\n    props.updateMinMax(Guess.MIN, Number(event.target.value));\n  /**\n   * #changeMax\n   *\n   * Updates the value of the maximum value parameter\n   *\n   * @param event {object}\n   */\n  const changeMax = (event) =>\n    props.updateMinMax(Guess.MAX, Number(event.target.value));\n  /**\n   * #resetDefault\n   *\n   * Move the parameter to the factory defaults\n   *\n   */\n  const resetDefault = () => props.updateMinMax(Guess.RESET);\n  /**\n   * #setButton\n   *\n   * This method add a button component if any user parameter is different to the factory defaults.\n   *\n   * @returns {JSX.Element}\n   */\n  const setButton = () => {\n    if (props.min > Guess.DEFAULT_MIN || props.max !== Guess.DEFAULT_MAX) {\n      return (\n        <button id=\"reset\" onClick={resetDefault}>\n          {Guess.label_reset}\n        </button>\n      );\n    }\n  };\n\n  // Render\n  return (\n    <section id=\"config\">\n      <h1>\n        <small>{Guess.title_sub}</small>\n        {Guess.title}\n      </h1>\n      <div id=\"params\">\n        <div className=\"choose\">{Guess.prelabels}</div>\n        <fieldset>\n          <label>{Guess.label_lower}</label>\n          <input type=\"number\" value={props.min} onChange={changeMin} />\n        </fieldset>\n        <fieldset>\n          <label>{Guess.label_upper}</label>\n          <input type=\"number\" value={props.max} onChange={changeMax} />\n        </fieldset>\n      </div>\n      {setButton()}\n      <div className=\"author\">\n        By:{\" \"}\n        <a href={Guess.author_uri} target=\"_blank\" rel=\"noreferrer\">\n          {Guess.author}\n        </a>\n      </div>\n\n      <button id=\"toGame\" onClick={props.changeScreen}>\n        <ToGame />\n      </button>\n    </section>\n  );\n};\n\nexport default Config;\n","import \"../styles.css\";\nimport { useState } from \"react\";\nimport Guess from \"./utils/Guess\";\nimport Game from \"./components/Game\";\nimport Config from \"./components/Config\";\n\n/**\n * #App\n *\n * Contains the top features of the game\n *\n * @returns {JSX.Element}\n * @constructor\n * @author @jam65st | Jaime A. Mendez\n *\n */\nconst App = () => {\n  // States\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [current, setCurrent] = useState(Guess.CURRENT_CONFIG);\n  const [attemptsList, setAttemptsList] = useState([]);\n  const [guessValue, setGuessValue] = useState(0);\n  const [result, setResult] = useState(Guess.STATE_INIT);\n  const [min, setMin] = useState(Guess.DEFAULT_MIN);\n  const [max, setMax] = useState(Guess.DEFAULT_MAX);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  /**\n   * ## updateMinMax\n   *\n   * Updates game parameters of minimal and maximal bound\n   *\n   * @param kind {string} It use values of Guess.MIN and Guess.MAX\n   * @param value {number} positive integer between 1 and 999\n   */\n  const updateMinMax = (kind, value) => {\n    // Reset to factory parameters\n    if (kind === Guess.RESET) resetBounds();\n\n    // Update custom parameters\n    if (kind === Guess.MIN && value > 0 && value < max) setMin(value);\n    if (kind === Guess.MAX && value > min && value < 1000) setMax(value);\n  };\n\n  /**\n   * #resetBounds\n   *\n   * Updates game parameters of minimal and maximal bound to the default values\n   * in Guess.DEFAULT_MIN and Guess.DEFAULT_MAX\n   */\n  const resetBounds = () => {\n    setMin(Guess.DEFAULT_MIN);\n    setMax(Guess.DEFAULT_MAX);\n  };\n\n  /**\n   * ## changeScreen\n   *\n   * Changes the UI hiding settings and showing game and backwards\n   * - This method inits a new game by setting the random number\n   * - Also reset game parameters\n   *\n   * @param event {object}\n   */\n  const changeScreen = (event) => {\n    // update UI\n    setCurrent(\n      event.currentTarget.id === Guess.CURRENT_TO_GAME\n        ? Guess.CURRENT_GAME\n        : Guess.CURRENT_CONFIG\n    );\n    if (event.currentTarget.id === Guess.CURRENT_TO_GAME) {\n      // define random number\n      setRandomNumber(randomInt());\n    } else {\n      // reset parameters\n      resetGame();\n    }\n  };\n\n  /**\n   * ##resetGame\n   *\n   * Moves game parameters to the initial state\n   *\n   */\n  const resetGame = () => {\n    setAttemptsList([]);\n    setGuessValue(0);\n    setResult(Guess.STATE_INIT);\n    setIsDisabled(false);\n  };\n\n  /**\n   * ##randomInt\n   *\n   * Generates a seudo-random number between the game bounds of minimal an maximal allowed values\n   *\n   * @returns {number}\n   *\n   */\n  const randomInt = () => Math.trunc(Math.random() * (max - min) + min);\n\n  /**\n   * ## testGuess\n   *\n   * It verifies if the value submitted by the user is equal to the random number and updates:\n   * - result (higher, lower, or winner )\n   * - attemptList\n   * - deactivate user input if is a winner\n   *\n   * @param event {object} from user blurring the input\n   *\n   */\n  const testGuess = (event) => {\n    let toTest = Number(event.target.value);\n    setResult(\n      toTest === randomNumber\n        ? Guess.STATE_WINNER\n        : toTest > randomNumber\n        ? Guess.STATE_HIGHER\n        : Guess.STATE_LOWER\n    );\n    setAttemptsList((list) => [...list, toTest]);\n    if (toTest === randomNumber) setIsDisabled(true);\n  };\n  /**\n   * ##updateGuess\n   *\n   * update the value of the guess after each user input.\n   *\n   * @param value\n   */\n  const updateGuess = (value) => setGuessValue(value);\n\n  // Render\n  return (\n    <main className=\"App\" current={current}>\n      <Game\n        result={result}\n        min={min}\n        max={max}\n        attemptsList={attemptsList}\n        changeScreen={changeScreen}\n        testGuess={testGuess}\n        guessValue={guessValue}\n        updateGuess={updateGuess}\n        isDisabled={isDisabled}\n      />\n      <Config\n        min={min}\n        max={max}\n        resetBounds={resetBounds}\n        updateMinMax={updateMinMax}\n        changeScreen={changeScreen}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./app/App\";\n\nconst rootElement = document.getElementById(\"root\"),\n  root = createRoot(rootElement);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}